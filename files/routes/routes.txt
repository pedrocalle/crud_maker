import { Router } from 'express';
import AppError from '../../../shared/errors/AppError';
import moduleNameService from '../services/moduleNameService';
import { CreatemoduleNameValidator, UpdatemoduleNameValidator } from '../validators/moduleName';

const moduleNameRouter = Router();

moduleNameRouter.post('/', async (req, res) => {
  const bodyValidate = await CreatemoduleNameValidator.validate({
    ...req.body,
    created_user_code: req.user.code,
  }).catch(err => {
    throw new AppError(err);
  });

  const moduleNameService = new moduleNameService();
  const moduleName = await moduleNameService.create(bodyValidate);

  return res.json(moduleName);
});

moduleNameRouter.get('/', async (req, res) => {
  const moduleNameService = new moduleNameService();
  const moduleName = await moduleNameService.read();

  return res.json(moduleName);
});

moduleNameRouter.put('/:id', async (req, res) => {
  const { id } = req.params;
  const bodyValidate = await UpdatemoduleNameValidator.validate({
    ...req.body,
    updated_user_code: req.user.code,
  }).catch(err => {
    throw new AppError(err);
  });

  const moduleNameService = new moduleNameService();
  const moduleName = await moduleNameService.update(id, bodyValidate);

  return res.json(moduleName);
});

moduleNameRouter.delete('/:id', async (req, res) => {
  const { id } = req.params;

  const moduleNameService = new moduleNameService();
  const moduleName = await moduleNameService.delete(id);

  return res.json(moduleName);
});

export default moduleNameRouter;
