import { Router } from 'express';
import AppError from '@/shared/errors/AppError';
import uModuleNameService from '../services/uModuleNameService';
import { CreateuModuleName, UpdateuModuleName } from '../validators/uModuleNameValidator';

const moduleNameRouter = Router();

moduleNameRouter.post('/', async (req, res) => {
  const bodyValidate = await CreateuModuleName.validate(req.body).catch(err => {
    throw new AppError(err);
  });

  const moduleNameService = new uModuleNameService();
  const moduleName = await moduleNameService.create(bodyValidate);

  return res.json(moduleName);
});

moduleNameRouter.get('/', async (req, res) => {
  const moduleNameService = new uModuleNameService();
  const moduleName = await moduleNameService.read(req.query as any);

  return res.json(moduleName);
});

moduleNameRouter.put('/:id', async (req, res) => {
  const { id } = req.params;
  const bodyValidate = await UpdateuModuleName.validate({
    id,
    ...req.body,
  }).catch(err => {
    throw new AppError(err);
  });

  const moduleNameService = new uModuleNameService();
  const moduleName = await moduleNameService.update(bodyValidate);

  return res.json(moduleName);
});

moduleNameRouter.delete('/:id', async (req, res) => {
  const { id } = req.params;

  const moduleNameService = new uModuleNameService();
  const moduleName = await moduleNameService.delete(id);

  return res.json(moduleName);
});

export default moduleNameRouter;
